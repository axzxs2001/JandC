@page "/ParentPage"
@using JandC.Data
@inject IUriHelper UriHelper
@using MyComponent1

<ChildComponent Title="Panel Title from Parent"
                OnClick="@ShowMessage">
    Content of the child component is supplied
    by the parent component.
</ChildComponent>
<p><b>@messageText</b></p>


<hr style="border-color:red; border-width:thick;" />

<h1>Parent Component</h1>
<p>ParentYear: @ParentYear</p>
<ChildComponent1 bind-Year="@ParentYear" ref="childComponent1" />

<button class="btn btn-primary" onclick="@ChangeTheYear">
    Change Year
</button>

<hr style="border-color:red; border-width:thick;" />

<TableTemplate Items="@pets" Context="pet">
    <TableHeader>
        <th>ID</th>
        <th>Name</th>
    </TableHeader>
    <RowTemplate>
        <td>@pet.PetId</td>
        <td>@pet.Name</td>
    </RowTemplate>
</TableTemplate>

<hr style="border-color:red; border-width:thick;" />

<GswComponent Count="3" Message="桂素伟"></GswComponent>

<GswComponent1 Count="4" Message="桂素伟111"></GswComponent1>


@functions {



    #region pets

    PetModel[] pets;
    protected override void OnInit()
    {
        System.Text.Encoding.RegisterProvider(System.Text.CodePagesEncodingProvider.Instance);
        pets = new PetModel[] {
            new PetModel { PetId=1, Name="小猫"},
            new PetModel { PetId=2, Name="小狗"}
        };
    }

    #endregion



    #region ChildComponent1
    private ChildComponent1 childComponent1;
    [Parameter]
    private int ParentYear { get; set; } = 1978;

    private void ChangeTheYear()
    {
        ParentYear = 1986 + new Random().Next(1, 15);
        Console.WriteLine(childComponent1.Year);
    }
    #endregion

    #region ChildComponent
    private string messageText;

    void ShowMessage(UIMouseEventArgs e)
    {
        messageText = "Blaze a new trail with Blazor!";
    }

    #endregion

}
